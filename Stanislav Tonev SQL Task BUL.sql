create table Студенти (Номер integer PRIMARY KEY, име text, години integer);



INSERT INTO Студенти (Номер, име, години) VALUES 
	(1, 'Станислав Тонев', 25),
	(2, 'Иван Шишков', 47),
	(3, 'Петко Йорданов', 33),
	(4, 'Виктория Петкова', 26),
	(5, 'Ирина Спасова', 21);

create table Приятели (Номер integer PRIMARY KEY, 
						Студент_Номер integer,
						Име_на_Приятел text,
						FOREIGN KEY(Студент_Номер) REFERENCES Студенти(Номер)
						
						);

INSERT INTO Приятели (Номер, Студент_Номер, Име_на_Приятел) VALUES

	(1, 1, 'Виктория Петкова'),
	(2, 1, 'Иван Шишков'),
	(3, 1, 'Петко Йорданов'),
	(4, 2, 'Станислав Тонев'),
	(5, 2, 'Ирина Спасова'),
	(6, 2, 'Петко Йорданов'),
	(7, 3, 'Иван Шишков'),
	(8, 3, 'Станислав Тонев'),
	(9, 3, 'Виктория Петкова'),
	(10, 3, 'Ирина Спасова'),
	(11, 4, 'Станислав Тонев'),
	(12, 4, 'Петко Йорданов'),
	(13, 4, 'Ирина Спасова'),
	(14, 5, 'Виктория Петкова'),
	(15, 5, 'Ханко Брат');
	

-- // ТЪРСЕНЕ //

-- Всички приятели
select distinct Име_на_Приятел from Приятели; 


-- Всички приятели на моите приятели
select Студенти.име, Приятели.Име_на_Приятел  
from Студенти 
Inner JOIN Приятели ON (Студенти.Номер = Приятели.Студент_Номер)
WHERE Студенти.Номер!=1;


-- Всички приятели на моите приятели, които не са мои приятели
select Студенти.име, Приятели.Име_на_Приятел 
from Студенти 
Inner JOIN Приятели ON (Студенти.Номер = Приятели.Студент_Номер)
WHERE Студенти.Номер!=1 and Приятели.Име_на_Приятел!='Станислав Тонев';